name: Email Notification

on:
  pull_request:
    branches:
      - master
    types: [synchronize, opened, reopened, ready_for_review]

jobs:
  Email-Notification:
    name: "Email Notification"
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: List commits on the pull request
        run: |
          response=$(curl --request GET \
          --url 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits' \
          --header 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Content-Type: application/json')
          
          echo $response > response.json

      - name: Get latest commit
        run: |
          echo "Get length of the array:"
          length=$(jq 'length' response.json)

          echo "Get index of the latest commit:"
          index=$(($length - 1))

          echo "Get context of the latest commit:"
          latest_commit=$(jq --argjson index $index '.[$index]' response.json)
          echo "$latest_commit"

          echo "Get commit message of the latest commit:"
          echo 'latest_commit_message<<EOF' >> $GITHUB_ENV
          echo "$latest_commit" | jq -r '.commit.message' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo "${{ env.latest_commit_message }}"

          echo "Get commit SHA of the latest commit:"
          latest_commit_sha=$(echo "$latest_commit" | jq -r '.sha')
          echo "$latest_commit_sha"
          
          echo "Get name of author of the latest commit:"
          latest_commit_author_name=$(echo "$latest_commit" | jq -r '.commit.author.name')
          echo "$latest_commit_author_name"
          
          echo "Get email of author of the latest commit:"
          latest_commit_author_email=$(echo "$latest_commit" | jq -r '.commit.author.email')
          echo "$latest_commit_author_email"
          
          echo "latest_commit_sha=${latest_commit_sha}" >> $GITHUB_ENV
          echo "latest_commit_author_name=${latest_commit_author_name}" >> $GITHUB_ENV
          echo "latest_commit_author_email=${latest_commit_author_email}" >> $GITHUB_ENV
      - name: "Send Email"
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtpdm.aliyun.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Pull Request Review 提醒
          # Required recipients' addresses:
          to: ${{secrets.MAIL_RECEIVER}}
          # Required sender full name (address can be skipped):
          from: Github PR 提醒
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional plain body:
          # body: ${{github.actor}} 发起 Pull Request，请尽快进行 Code Review。
          # Using Markdown
          html_body: |
            ## ${{github.event.pull_request.user.login}} 发起 Pull Request，请尽快进行 Code Review
            ${{github.event.pull_request.user.login}} 想要将分支 ${{github.head_ref}} 上的 ${{github.event.pull_request.commits}} 个提交合并到 ${{github.base_ref}} 分支
            
            Pull Request 标题：${{github.event.pull_request.title}}
            
            Pull Request 地址：${{github.event.pull_request.html_url}}

            ### 最新的提交：
            #### 作者 
            ${{env.latest_commit_author_name}}(${{env.latest_commit_author_email}})
            #### 提交信息
            ${{env.latest_commit_message}}
            #### 提交 SHA
            ${{env.latest_commit_sha}}
                        
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: normal
